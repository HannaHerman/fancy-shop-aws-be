service: product-service

frameworkVersion: '3'

plugins:
  - serverless-webpack
  - serverless-auto-swagger
  - serverless-dotenv-plugin

custom:
  webpack:
    webpackConfig: webpack.config.js
    includeModules: true
    packager: 'npm'
  autoswagger:
    generateSwaggerOnDeploy: true
    typefiles: src/types/api-types.d.ts
useDotenv: true
provider:
  name: aws
  runtime: nodejs16.x
  stage: dev
  region: eu-west-1
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "sns:*"
          Resource: 
            Ref: SNSTopic
functions:
  getProductsList:
    handler: src/functions/index.getProductsList
    events:
      - http:
          path: products
          method: get
          cors: true
  getProductsById:
    handler: src/functions/index.getProductsById
    events:
      - http:
          path: products/{productId}
          method: get
          cors: true
  createProduct:
    handler: src/functions/index.createProduct
    events:
      - http:
          path: products
          method: post
          cors: true
  catalogBatchProcess:
    handler: src/functions/index.catalogBatchProcess
    events:
      - sqs:
          arn: 
            Fn::GetAtt: [ SQSQueue, Arn ]
          batchSize: 5

resources:
  Resources:
    SQSQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: catalogItemsQueue
    SNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: createProductsTopic
    SNSSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: mrshannaherman@gmail.com
        Protocol: email
        TopicArn:
          Ref: SNSTopic
